package com.app.demo.pojos;

import java.sql.Date;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Embedded;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.validation.Valid;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;

import org.hibernate.validator.constraints.Length;

import com.fasterxml.jackson.annotation.JsonIgnore;

import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Entity
@NoArgsConstructor
@Getter
@Setter
@ToString(exclude = { "us1" })
public class Driver_Details {
	@Id
	private String license_no;
	@Column(nullable = false)
	private String adhar_name;
	@Embedded
	@Valid
	@Column(nullable = false)
	private Address address;
	private Date dob;
	@Column(nullable = false)
	private boolean gender;
	@Column(nullable = false)
	private String email;

	@Max(value = 9999999999999999L)
	@Min(value = 1000000000000000L)
	@Column(nullable = false, unique = true)
	private long adhar_no;
	@Column(nullable = false, unique = true)
	@Max(value = 9999999999L)
	@Min(value = 1000000000L)
	private int mob_no;
	@OneToMany(mappedBy = "dr1", cascade = CascadeType.MERGE, fetch = FetchType.EAGER)
	@JsonIgnore
	private List<Orders_Details> us1;
	

	public String getLicense_no() {
		return license_no;
	}

	public void setLicense_no(String license_no) {
		this.license_no = license_no;
	}

	public String getAdhar_name() {
		return adhar_name;
	}

	public void setAdhar_name(String adhar_name) {
		this.adhar_name = adhar_name;
	}

	public Address getAddress() {
		return address;
	}

	public void setAddress(Address address) {
		this.address = address;
	}

	public Date getDob() {
		return dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	public boolean isGender() {
		return gender;
	}

	public void setGender(boolean gender) {
		this.gender = gender;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public long getAdhar_no() {
		return adhar_no;
	}

	public void setAdhar_no(long adhar_no) {
		this.adhar_no = adhar_no;
	}

	public int getMob_no() {
		return mob_no;
	}

	public void setMob_no(int mob_no) {
		this.mob_no = mob_no;
	}

	public List<Orders_Details> getUs1() {
		return us1;
	}

	public void setUs1(List<Orders_Details> us1) {
		this.us1 = us1;
	}

	public Driver_Details() {
		super();
	}

	@Override
	public String toString() {
		return "Driver_Details [license_no=" + license_no + ", adhar_name=" + adhar_name + ", address=" + address
				+ ", dob=" + dob + ", gender=" + gender + ", email=" + email + ", adhar_no=" + adhar_no + ", mob_no="
				+ mob_no + "]";
	}

	public Driver_Details(String license_no, String adhar_name, @Valid Address address, Date dob, boolean gender,
			String email, @Length(min = 16, max = 16, message = "Invalid Number") long adhar_no,
			@Length(min = 10, max = 10, message = "Mobile no should be of 10 digits") int mob_no) {
		super();
		this.license_no = license_no;
		this.adhar_name = adhar_name;
		this.address = address;
		this.dob = dob;
		this.gender = gender;
		this.email = email;
		this.adhar_no = adhar_no;
		this.mob_no = mob_no;
	}

	public void addorders(Orders_Details or1) {
		if (us1 == null) {
			us1 = new ArrayList<>();
		}
		us1.add(or1);
		or1.setDr1(this);
	}

}
